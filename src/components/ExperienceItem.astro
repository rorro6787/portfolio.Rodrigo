---
interface Props {
  title: string
  company: string
  description: string[]
  link?: string
  info?: string
  date: string
}

const { title, company, description, link, info, date } = Astro.props
const isOngoing = date.toLowerCase().includes('present') || date.toLowerCase().includes('ongoing')
---

<div
  class:list={[
    "experience-item relative mx-12 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:content-[''] md:grid-cols-5 md:gap-10 md:space-x-4]",
    isOngoing ? "before:border-yellow-400/60 dark:before:border-yellow-400/50" : "before:border-yellow-400/30 dark:before:border-yellow-400/20"
  ]}
>
  <div class="relative pb-12 md:col-span-2">
    <div class="sticky top-0">
      <span class:list={[
        "experience-dot -left-[42px] absolute rounded-full text-5xl",
        isOngoing ? "text-yellow-400 animate-pulse-glow" : "text-yellow-400"
      ]}
        >&bull;</span
      >

      <h3 class:list={[
        "text-xl font-bold mb-1",
        isOngoing ? "text-yellow-400 animate-shimmer bg-gradient-to-r from-yellow-400 via-yellow-300 to-yellow-400 bg-clip-text text-transparent bg-[length:200%_100%]" : "text-yellow-400"
      ]}>{title}</h3>
      <h4 class="font-semibold text-xl text-gray-600 dark:text-white mb-1">{company}</h4>
      <time class:list={[
        "inline-block px-3 py-1 text-xs font-medium rounded-full",
        isOngoing 
          ? "text-yellow-700 dark:text-yellow-300 bg-yellow-200 dark:bg-yellow-400/20 border-2 border-yellow-400/40 shadow-md shadow-yellow-400/30 animate-pulse-border" 
          : "text-yellow-600 dark:text-yellow-400 bg-yellow-100 dark:bg-yellow-400/10 border border-yellow-400/20"
      ]}>{date}</time>
    </div>
  </div>
  <div class="experience-content relative flex flex-col gap-2 pb-4 text-gray-600 dark:text-gray-300 md:col-span-3">
    <a 
      href={link || info || '#'}
      target="_blank"
      rel="noopener noreferrer"
      class:list={[
        "block p-6 rounded-lg transition-all duration-300 cursor-pointer",
        isOngoing 
          ? "bg-gradient-to-br from-yellow-100 to-orange-100 dark:from-yellow-900/30 dark:to-orange-900/30 border-2 border-yellow-300 dark:border-yellow-700/50 hover:shadow-2xl hover:shadow-yellow-500/30 ring-2 ring-yellow-400/20" 
          : "bg-gradient-to-br from-yellow-50 to-orange-50 dark:from-yellow-950/20 dark:to-orange-950/20 border border-yellow-200 dark:border-yellow-800/30 hover:shadow-lg hover:shadow-yellow-500/10"
      ]}
    >
      <div class="flex items-start gap-3 mb-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-yellow-600 dark:text-yellow-400 flex-shrink-0 mt-1" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
          <path d="M3 7m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
          <path d="M8 7v-2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v2" />
          <path d="M12 12l0 .01" />
          <path d="M3 13a20 20 0 0 0 18 0" />
        </svg>
        <div class="flex-1 space-y-3">
          {description.map((desc, index) => (
            <p class="leading-relaxed">{desc}</p>
          ))}
        </div>
      </div>
    </a>
  </div>
</div>

<style>
  .experience-item {
    opacity: 0;
    animation: fadeInUp 0.6s ease-out forwards;
  }

  .experience-dot {
    animation: pulse 2s ease-in-out infinite;
  }

  .experience-content {
    animation: slideInRight 0.8s ease-out forwards;
    animation-delay: 0.2s;
    opacity: 0;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(-30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.1);
      opacity: 0.8;
    }
  }

  @keyframes pulse-glow {
    0%, 100% {
      transform: scale(1);
      opacity: 1;
      filter: drop-shadow(0 0 4px rgb(251 191 36 / 0.5));
    }
    50% {
      transform: scale(1.15);
      opacity: 0.9;
      filter: drop-shadow(0 0 12px rgb(251 191 36 / 0.8));
    }
  }

  @keyframes shimmer {
    0% {
      background-position: 200% center;
    }
    100% {
      background-position: -200% center;
    }
  }

  @keyframes pulse-border {
    0%, 100% {
      box-shadow: 0 0 0 0 rgba(251, 191, 36, 0.4);
    }
    50% {
      box-shadow: 0 0 0 4px rgba(251, 191, 36, 0.1);
    }
  }

  .animate-pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite;
  }

  .animate-shimmer {
    animation: shimmer 3s linear infinite;
  }

  .animate-pulse-border {
    animation: pulse-border 2s ease-in-out infinite;
  }
</style>
