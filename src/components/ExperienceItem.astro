---
import LinkInline from "./LinkInline.astro"

interface Props {
  title: string
  company: string
  description: string[]
  link?: string
  info?: string
  date: string
}

const { title, company, description, link, info, date } = Astro.props
---

<div
  class="experience-item relative mx-12 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-yellow-400/30 dark:before:border-yellow-400/20 before:content-[''] md:grid-cols-5 md:gap-10 md:space-x-4]"
>
  <div class="relative pb-12 md:col-span-2">
    <div class="sticky top-0">
      <span class="experience-dot text-yellow-400 -left-[42px] absolute rounded-full text-5xl"
        >&bull;</span
      >

      <h3 class="text-xl font-bold text-yellow-400 mb-1">{title}</h3>
      <h4 class="font-semibold text-xl text-gray-600 dark:text-white mb-1">{company}</h4>
      <time class="inline-block px-3 py-1 text-xs font-medium text-yellow-600 dark:text-yellow-400 bg-yellow-100 dark:bg-yellow-400/10 rounded-full border border-yellow-400/20">{date}</time>
    </div>
  </div>
  <div class="experience-content relative flex flex-col gap-2 pb-4 text-gray-600 dark:text-gray-300 md:col-span-3">
    <div class="bg-gradient-to-br from-yellow-50 to-orange-50 dark:from-yellow-950/20 dark:to-orange-950/20 p-6 rounded-lg border border-yellow-200 dark:border-yellow-800/30 hover:shadow-lg hover:shadow-yellow-500/10 transition-all duration-300">
      <div class="flex items-start gap-3 mb-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-yellow-600 dark:text-yellow-400 flex-shrink-0 mt-1" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
          <path d="M3 7m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
          <path d="M8 7v-2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v2" />
          <path d="M12 12l0 .01" />
          <path d="M3 13a20 20 0 0 0 18 0" />
        </svg>
        <div class="flex-1 space-y-3">
          {description.map((desc, index) => (
            <p class="leading-relaxed">{desc}</p>
          ))}
        </div>
      </div>
      {
        (link || info) && (
          <div class="flex gap-3 mt-4 pt-4 border-t border-yellow-200 dark:border-yellow-800/30 ml-9">
            {link && (
              <LinkInline href={link}>
                <span class="flex items-center gap-1">
                  Know more{" "}
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="w-4 h-4 transition-transform group-hover:translate-x-1"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    stroke-width="2"
                    stroke="currentColor"
                    fill="none"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <>
                      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                      <path d="M9 6l6 6l-6 6" />
                    </>
                  </svg>
                </span>
              </LinkInline>
            )}
            {info && (
              <LinkInline href={info}>
                <span class="flex items-center gap-1">
                  Github repository{" "}
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="w-4 h-4 transition-transform group-hover:translate-x-1"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    stroke-width="2"
                    stroke="currentColor"
                    fill="none"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  >
                    <>
                      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                      <path d="M9 6l6 6l-6 6" />
                    </>
                  </svg>
                </span>
              </LinkInline>
            )}
          </div>
        )
      }
    </div>
  </div>
</div>

<style>
  .experience-item {
    opacity: 0;
    animation: fadeInUp 0.6s ease-out forwards;
  }

  .experience-dot {
    animation: pulse 2s ease-in-out infinite;
  }

  .experience-content {
    animation: slideInRight 0.8s ease-out forwards;
    animation-delay: 0.2s;
    opacity: 0;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(-30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.1);
      opacity: 0.8;
    }
  }
</style>
